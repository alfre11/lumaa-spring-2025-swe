{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexj\\\\lumaa-spring-2025-swe\\\\frontend\\\\src\\\\pages\\\\TasksPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TasksPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const [editingTask, setEditingTask] = useState(null);\n  const [editTitle, setEditTitle] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      navigate(\"/\");\n    } else {\n      console.log(\"token: \", token);\n      fetchTasks();\n    }\n  }, [navigate]);\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    try {\n      console.log(\"fetching tasks\");\n      const response = await fetch(\"http://localhost:4000/tasks\", {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!Array.isArray(data)) {\n        throw new Error(\"Invalid data format: Expected an array\");\n      }\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  const addTask = async () => {\n    if (!newTask.trim()) return;\n    try {\n      const response = await fetch(\"http://localhost:4000/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          title: newTask\n        })\n      });\n      if (response.ok) {\n        setNewTask(\"\");\n        fetchTasks();\n      }\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.ok) {\n        fetchTasks();\n      }\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    navigate(\"/logout\");\n  };\n\n  // Handle marking a task as complete\n  const markComplete = async (taskId, currentStatus, taskTitle) => {\n    try {\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          title: taskTitle,\n          completed: !currentStatus\n        })\n      });\n      if (response.ok) {\n        setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n          ...task,\n          completed: !currentStatus\n        } : task));\n      }\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  // Handle editing a task title\n  const startEditing = task => {\n    setEditingTask(task);\n    setEditTitle(task.title);\n  };\n  const saveEdit = async (taskId, currentStatus, taskTitle) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n    try {\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          title: taskTitle,\n          completed: currentStatus\n        })\n      });\n      if (response.ok) {\n        setTasks(tasks.map(task => task.id === taskId ? {\n          ...task,\n          title: editTitle\n        } : task));\n        setEditingTask(null);\n      }\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome! You can now create and manage tasks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter new task\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id) === task.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editTitle,\n            onChange: e => setEditTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => saveEdit(task.id, task.completed, task.title),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: task.completed ? \"line-through\" : \"none\"\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => markComplete(task.id, task.completed, task.title),\n            children: task.completed ? \"Undo\" : \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startEditing(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/logout\"),\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksPage, \"XXeTXBUl9jn/JE0MlPtVEEPAUMI=\", false, function () {\n  return [useNavigate];\n});\n_c = TasksPage;\nexport default TasksPage;\nvar _c;\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","TasksPage","_s","tasks","setTasks","newTask","setNewTask","editingTask","setEditingTask","editTitle","setEditTitle","navigate","token","localStorage","getItem","console","log","fetchTasks","response","fetch","headers","Authorization","ok","Error","status","data","json","Array","isArray","error","addTask","trim","method","body","JSON","stringify","title","deleteTask","taskId","handleLogout","removeItem","markComplete","currentStatus","taskTitle","completed","prevTasks","map","task","id","startEditing","saveEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/alexj/lumaa-spring-2025-swe/frontend/src/pages/TasksPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Task {\r\n  id: number;\r\n  title: string;\r\n  description: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst TasksPage = () => {\r\n    const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [newTask, setNewTask] = useState(\"\"); \r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n        navigate(\"/\");\r\n    } else {\r\n        console.log(\"token: \", token);\r\n      fetchTasks();\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Fetch tasks\r\n  const fetchTasks = async () => {\r\n    try {\r\n        console.log(\"fetching tasks\");\r\n        const response = await fetch(\"http://localhost:4000/tasks\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();   \r\n        if (!Array.isArray(data)) {\r\n            throw new Error(\"Invalid data format: Expected an array\");\r\n        }\r\n        setTasks(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  const addTask = async () => {\r\n    if (!newTask.trim()) return;\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:4000/tasks\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ title: newTask }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setNewTask(\"\");\r\n        fetchTasks();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding task:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (taskId: number) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchTasks();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/logout\");\r\n  };\r\n\r\n  // Handle marking a task as complete\r\n  const markComplete = async (taskId: number, currentStatus: boolean, taskTitle: string) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({\r\n          title: taskTitle,\r\n          completed: !currentStatus,\r\n        }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        setTasks((prevTasks) =>\r\n          prevTasks.map((task) =>\r\n            task.id === taskId ? { ...task, completed: !currentStatus } : task\r\n          )\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  // Handle editing a task title\r\n  const startEditing = (task: Task) => {\r\n    setEditingTask(task);\r\n    setEditTitle(task.title);\r\n  };\r\n\r\n  const saveEdit = async (taskId: number, currentStatus: boolean, taskTitle: string) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ \r\n            title: taskTitle,\r\n            completed: currentStatus,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setTasks(tasks.map(task => (task.id === taskId ? { ...task, title: editTitle } : task)));\r\n        setEditingTask(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Manager</h2>\r\n      <p>Welcome! You can now create and manage tasks.</p>\r\n\r\n      <input\r\n      type=\"text\"\r\n      placeholder=\"Enter new task\"\r\n      value={newTask}\r\n      onChange={(e) => setNewTask(e.target.value)}\r\n    />\r\n    <button onClick={addTask}>Add Task</button>\r\n\r\n      {tasks.length > 0 ? (\r\n        <ul>\r\n          {tasks.map((task) => (\r\n            <li key={task.id}>\r\n              {editingTask?.id === task.id ? (\r\n                <>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editTitle}\r\n                    onChange={(e) => setEditTitle(e.target.value)}\r\n                  />\r\n                  <button onClick={() => saveEdit(task.id, task.completed, task.title)}>Save</button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\r\n                    {task.title}\r\n                  </span>\r\n                  <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n                  <button onClick={() => markComplete(task.id, task.completed, task.title)}>\r\n                    {task.completed ? \"Undo\" : \"Complete\"}\r\n                  </button>\r\n                  <button onClick={() => startEditing(task)}>Edit</button>\r\n                </>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No tasks available.</p>\r\n      )}\r\n\r\n      <button onClick={() => navigate(\"/logout\")}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}